<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android on The Streamliners</title>
    <link>https://thestreamliners.in/categories/android/</link>
    <description>Recent content in Android on The Streamliners</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 14 Jun 2023 00:00:00 +0530</lastBuildDate>
    <atom:link href="https://thestreamliners.in/categories/android/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Differences between CompileSDK,MinSDK and TargetSDK Version</title>
      <link>https://thestreamliners.in/blog/differences-between-compilesdk-minsdk-and-targetsdk/</link>
      <pubDate>Wed, 14 Jun 2023 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/differences-between-compilesdk-minsdk-and-targetsdk/</guid>
      <description>Differences between CompileSDK,MinSDK and TargetSDK Version When developing Android applications, developers come across various terminologies and concepts related to the Android SDK (Software Development Kit). Three important terms that often cause confusion are CompileSDK, MinSDK, and TargetSDK versions. Each of these versions plays a crucial role in the development and compatibility of an Android application. In this article, we will explore the differences between CompileSDK, MinSDK, and TargetSDK versions and understand their significance.</description>
    </item>
    <item>
      <title>Using startActivityForResult Intent Launchers in Compose</title>
      <link>https://thestreamliners.in/blog/using-intentlaunchers-in-compose/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/using-intentlaunchers-in-compose/</guid>
      <description>Namaskaram!&#xA;Problem Android provides the following intent launcher APIs:&#xA;Legacy, Deprecated : startActivityForResult() &amp;amp; onActivityResult()&#xA;New: registerForActivityResult()&#xA;Both APIs are tightly coupled with Activity as they are functions of Activity.&#xA;Launching such intents from composables is tricky because of 2 reasons:&#xA;Passing launcher instance to Composable : registerForActivityResult() returns an instance of ActivityResultLauncher. To launch, this instance is required ( like launcher.launch(intent) ). For Composable to be able to launch, launcher needs to passed to it.</description>
    </item>
    <item>
      <title>Notification Broadcast using BitVector</title>
      <link>https://thestreamliners.in/blog/notification-broadcast-using-bitvector/</link>
      <pubDate>Sat, 14 Aug 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/notification-broadcast-using-bitvector/</guid>
      <description>Namaskaram,&#xA;In this blog, I will be sharing an amazing story where I used BitVector &amp;amp; Bitwise operators to save myself from writing complex code &amp;amp; also using up a lot of Server Bandwidth.&#xA;The problem During my journey as an Android Developer, I came across a use case where I needed to send personalized notifications to my users.&#xA;This app was JU eezy, which I developed for our University. I had to send notifications to users based on their profile.</description>
    </item>
    <item>
      <title>Revoke role access using Firestore Security rules</title>
      <link>https://thestreamliners.in/blog/revoke-role-access-using-firestore-security-rules/</link>
      <pubDate>Sat, 14 Aug 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/revoke-role-access-using-firestore-security-rules/</guid>
      <description>Namaskaram,&#xA;Many applications require Role Based access. For example : in an e-commerce project, roles like Admin, Shopkeeper, Agent etc. may exist. Granting and revoking the access manually can be hard &amp;amp; inefficient.&#xA;In this blog, I am sharing an easy &amp;amp; efficient way to grant &amp;amp; revoke role based access in a Firebase app.&#xA;Naive approach Let&amp;rsquo;s say : you have an Admin app where only authorised Admins should be able to login &amp;amp; access the app.</description>
    </item>
    <item>
      <title>Creating custom notifications</title>
      <link>https://thestreamliners.in/blog/creating-custom-notifications/</link>
      <pubDate>Mon, 09 Aug 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/creating-custom-notifications/</guid>
      <description>Notifications alert you to many things on your Android device, including incoming messages, new emails, and calendar events. Notifications work slightly differently for each app, but they&amp;rsquo;re easy to customize.&#xA;Starting in Android 8.0 (API level 26), all notifications must be assigned to a channel. For each channel, you can set the visual and auditory behavior that is applied to all notifications in that channel. Then, users can change these settings and decide which notification channels from your app should be intrusive or visible at all.</description>
    </item>
    <item>
      <title>Implement Location Picker like Ola and Uber in Android Effortlessly</title>
      <link>https://thestreamliners.in/blog/location-picker-like-ola-and-uber-in-android/</link>
      <pubDate>Mon, 09 Aug 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/location-picker-like-ola-and-uber-in-android/</guid>
      <description>We all come across applications or ideas where we may want users to pick or select their location from maps. From a UX perspective, it is more convenient to pick a location than to manually enter the fields given.&#xA;Also, from the developer&amp;rsquo;s perspective getting user location with pinpoint accuracy helps in getting the job done as required concerning location more precisely.&#xA;So, how to implement it? Well, it&amp;rsquo;s quite easy, you just have to call a few Google Maps APIs, set up location permissions precisely, and create your layout for location picker and that’s all!</description>
    </item>
    <item>
      <title>Firebase Log Events</title>
      <link>https://thestreamliners.in/blog/firebase-log-events/</link>
      <pubDate>Sun, 08 Aug 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/firebase-log-events/</guid>
      <description>Firebase provides very powerful feature which is “Log Events”. The power of this feature is that you can check which feature of your app is used mostly by the users.&#xA;Let’s deep dive into the implementation (note that the complete implementation is in Java)&#xA;Add this library in your build.gradle file:&#xA;implementation &amp;#39;com.google.firebase:firebase-analytics&amp;#39; I had used firebase bom in my project so their is no need to give version to firebase-analytics library</description>
    </item>
    <item>
      <title>Implement RecyclerView in android with kotlin</title>
      <link>https://thestreamliners.in/blog/recycler-view-with-kotlin/</link>
      <pubDate>Sun, 08 Aug 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/recycler-view-with-kotlin/</guid>
      <description>Do you have a large list of data to show to the users of your application?&#xA;Want a flexible and developer and user friendly way to show the data?&#xA;Then RecyclerView is the right choice.&#xA;RecyclerView is an advanced version of ListView that is more powerful and flexible.&#xA;It is a ViewGroup which is the successor of ListView and GridView including improvement on both of them.&#xA;As the name suggests, RecyclerView recycle the views which are out of visibility of user.</description>
    </item>
    <item>
      <title>Organizing Android Code</title>
      <link>https://thestreamliners.in/blog/organized-code/</link>
      <pubDate>Sun, 08 Aug 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/organized-code/</guid>
      <description>Tips to keep your android project files and code organized Overview Android applications should always be neatly organized with a clear folder structure that makes your code easy to read. In addition, proper naming conventions for code and classes are important to ensure your code is clean and maintainable.&#xA;The importance of an organized code structure It&amp;rsquo;s all about readability. Big projects can be difficult to organize due to the amount of classes, resource files and libraries used.</description>
    </item>
    <item>
      <title>Implementing Alarm manager</title>
      <link>https://thestreamliners.in/blog/implement-alarm-manager/</link>
      <pubDate>Sat, 03 Jul 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/implement-alarm-manager/</guid>
      <description>How to implement an alarm in your android application using AlarmManager? Android AlarmManager allows you to access system alarm.&#xA;With the help of AlarmManager in android, you can schedule your application to run at a specific time in the future.&#xA;AlarmManager is a bridge between application and Android system alarm service. It can send a broadcast to your app (which can be completely terminated by user) at a scheduled time and your app can then perform any task accordingly.</description>
    </item>
    <item>
      <title>Firebase Push notifications using Admin SDK</title>
      <link>https://thestreamliners.in/blog/firebase-push-notifications-in-android-using-admin-sdk/</link>
      <pubDate>Thu, 01 Jul 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/firebase-push-notifications-in-android-using-admin-sdk/</guid>
      <description>How to send push notifications through an Android app using firebase? A notification is a message you can display to the user outside of your application’s normal UI. When you tell the system to issue a notification, it first appears as an icon in the notification area. Notifications are important to give timely updates to your android app users they require minimal UI to notify the user about the event.</description>
    </item>
    <item>
      <title>Background Location Permission in Android 11 and above</title>
      <link>https://thestreamliners.in/blog/background-location-permission-in-android-11-and-above/</link>
      <pubDate>Wed, 23 Jun 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/background-location-permission-in-android-11-and-above/</guid>
      <description>Request background location permission in all android versions using Java With lastest android version Android 11, some security is added for location. Now to access background location, users have to manually “Allow all the time” in settings.&#xA;For using foreground and background location in lower versions of Android 11, we can take permission ACCESS_FINE_LOCATION, this permission will be considered for both foreground and background but with Android 11 and above you have to take one more permission ACCESS_BACKGROUND_LOCATION separately.</description>
    </item>
    <item>
      <title>Designing Custom Toast in Android</title>
      <link>https://thestreamliners.in/blog/designing-custom-toast-in-android/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/designing-custom-toast-in-android/</guid>
      <description>We all love to add toast in places we want to check something, check on click events, give some short messages to user they have endless use. But putting a same toast for different kind of messages such as success, error, alert can be confusing and may not be visually alarming to users.&#xA;So what is the solution? We can design custom views and then inflate them in Toast. Below are some kind of examples we will be implementing, to create our custom Toast which will look cool and visually satisfying to users.</description>
    </item>
    <item>
      <title>Implement Notification Count overlay inside Android App</title>
      <link>https://thestreamliners.in/blog/implement-notification-count-overlay-inside-android-app/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/implement-notification-count-overlay-inside-android-app/</guid>
      <description>Do you want to add notification count or badge like this to your app? Well everyone developer wants to add it as it improves User Experience significantly.&#xA;Its always handy to know how many notification I have when I open my app.&#xA;For the demo purpose we shall be creating this layout.&#xA;Step 1 Add this custom UI implementation to app-level gradle file. We will be using this library.</description>
    </item>
    <item>
      <title>Implement a Offline QR Generation and Scanning in Android</title>
      <link>https://thestreamliners.in/blog/implement-a-offline-qr-generation-and-scanning-in-android/</link>
      <pubDate>Mon, 17 May 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/implement-a-offline-qr-generation-and-scanning-in-android/</guid>
      <description>QR Code scanner or Barcode scanner for android features are present in many apps to read some useful data.&#xA;Barcodes can scan things ranging from URL, Contact info to Geolocation, WIFI, Driver license IDs.&#xA;QR Code is the more popular format and is commonly seen in many applications from digital payments, automating production, enabling attendance for employees for a business and many more.&#xA;Below, we’ll be developing an application that scans the QR Code value from a bitmap image as well as detects QR Code through a camera and perform the relevant actions, without need of a internet connection.</description>
    </item>
    <item>
      <title>Design a Custom Phone Authentication with Firebase for Android</title>
      <link>https://thestreamliners.in/blog/design-a-custom-phone-authentication-with-firebase/</link>
      <pubDate>Sun, 16 May 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/design-a-custom-phone-authentication-with-firebase/</guid>
      <description>Many apps require their users to be authenticated. So for the purpose of authenticating the apps uses phone number authentication inside their apps.&#xA;When you use phone number authentication, you have many benefits like&#xA;Preventing Fake Users: When you use phone authentication, the user can’t be able to register for multiple accounts, as for each account a unique phone number is needed. Increase User Value: When you have all the users verified by a phone number the value of your user base increases.</description>
    </item>
    <item>
      <title>Localize your Android App with multiple language options</title>
      <link>https://thestreamliners.in/blog/localize-your-android-app-with-multiple-language-options/</link>
      <pubDate>Sun, 16 May 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/localize-your-android-app-with-multiple-language-options/</guid>
      <description>Android runs on many devices in many regions. To reach the most users, your app should handle text, audio files, numbers, currency, and graphics in ways appropriate to the locales where your app is used.&#xA;It is not enough to use only one language option while developing applications. When we publish our applications, there may be users who want to use it in different languages or who do not know the language we have developed.</description>
    </item>
    <item>
      <title>Implementing Biometric Authentication in Java Android</title>
      <link>https://thestreamliners.in/blog/implementing-biometric-authentication-in-java-android/</link>
      <pubDate>Sat, 15 May 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/implementing-biometric-authentication-in-java-android/</guid>
      <description>Thinking of adding your own app lock to your android app? Adding a biometric app lock 🔒 to protect your user from unauthorized usage, protect their data and information can be really helpful.&#xA;Biometric authentication allows you to quickly unlock your device with your fingerprint or face, confirming it’s really you who’s using the app.&#xA;Android’s biometric APIs allow for secure authentication on the Android platform. They manage a system-provided biometric authentication prompt, and provide a seamless experience by supporting various authentication types, including biometric ones such as fingerprint and face, as well as non-biometric types like PIN, password, and pattern.</description>
    </item>
    <item>
      <title>Implementing the Perfect Splash for Android</title>
      <link>https://thestreamliners.in/blog/implementing-the-perfect-splash-for-android/</link>
      <pubDate>Sat, 15 May 2021 00:00:00 +0530</pubDate>
      <guid>https://thestreamliners.in/blog/implementing-the-perfect-splash-for-android/</guid>
      <description>A Splash Screen is a screen which appears when you open an app on your mobile device. Sometimes it’s referred to as a launch screen or startup screen and shows up when your app is loading after you&amp;rsquo;ve just opened it.&#xA;When the loading is finished, you’ll be taken to a more functional screen where you can complete actions.&#xA;Splash screens appear on your screen for a fleeting moment – look away and you might miss them.</description>
    </item>
  </channel>
</rss>
