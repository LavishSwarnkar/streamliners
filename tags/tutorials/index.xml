<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorials on The Streamliners</title>
    <link>https://thestreamliners.in/tags/tutorials/</link>
    <description>Recent content in Tutorials on The Streamliners</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 May 2021 00:00:00 +0530</lastBuildDate><atom:link href="https://thestreamliners.in/tags/tutorials/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Designing Custom Toast in Android</title>
      <link>https://thestreamliners.in/blog/designing-custom-toast-in-android/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0530</pubDate>
      
      <guid>https://thestreamliners.in/blog/designing-custom-toast-in-android/</guid>
      <description>We all love to add toast in places we want to check something, check on click events, give some short messages to user they have endless use. But putting a same toast for different kind of messages such as success, error, alert can be confusing and may not be visually alarming to users.
So what is the solution? We can design custom views and then inflate them in Toast. Below are some kind of examples we will be implementing, to create our custom Toast which will look cool and visually satisfying to users.</description>
    </item>
    
    <item>
      <title>Implement Notification Count overlay inside Android App</title>
      <link>https://thestreamliners.in/blog/implement-notification-count-overlay-inside-android-app/</link>
      <pubDate>Thu, 20 May 2021 00:00:00 +0530</pubDate>
      
      <guid>https://thestreamliners.in/blog/implement-notification-count-overlay-inside-android-app/</guid>
      <description>Do you want to add notification count or badge like this to your app? Well everyone developer wants to add it as it improves User Experience significantly.
Its always handy to know how many notification I have when I open my app.
For the demo purpose we shall be creating this layout.
 Step 1 Add this custom UI implementation to app-level gradle file. We will be using this library.</description>
    </item>
    
    <item>
      <title>Implement a Offline QR Generation and Scanning in Android</title>
      <link>https://thestreamliners.in/blog/implement-a-offline-qr-generation-and-scanning-in-android/</link>
      <pubDate>Mon, 17 May 2021 00:00:00 +0530</pubDate>
      
      <guid>https://thestreamliners.in/blog/implement-a-offline-qr-generation-and-scanning-in-android/</guid>
      <description>QR Code scanner or Barcode scanner for android features are present in many apps to read some useful data.
Barcodes can scan things ranging from URL, Contact info to Geolocation, WIFI, Driver license IDs.
QR Code is the more popular format and is commonly seen in many applications from digital payments, automating production, enabling attendance for employees for a business and many more.
Below, weâ€™ll be developing an application that scans the QR Code value from a bitmap image as well as detects QR Code through a camera and perform the relevant actions, without need of a internet connection.</description>
    </item>
    
    <item>
      <title>Design a Custom Phone Authentication with Firebase for Android</title>
      <link>https://thestreamliners.in/blog/design-a-custom-phone-authentication-with-firebase/</link>
      <pubDate>Sun, 16 May 2021 00:00:00 +0530</pubDate>
      
      <guid>https://thestreamliners.in/blog/design-a-custom-phone-authentication-with-firebase/</guid>
      <description>Many apps require their users to be authenticated. So for the purpose of authenticating the apps uses phone number authentication inside their apps.
When you use phone number authentication, you have many benefits like
 Preventing Fake Users:Â When you use phone authentication, the user canâ€™t be able to register for multiple accounts, as for each account a unique phone number is needed. Increase User Value:Â When you have all the users verified by a phone number the value of your user base increases.</description>
    </item>
    
    <item>
      <title>Localize your Android App with multiple language options</title>
      <link>https://thestreamliners.in/blog/localize-your-android-app-with-multiple-language-options/</link>
      <pubDate>Sun, 16 May 2021 00:00:00 +0530</pubDate>
      
      <guid>https://thestreamliners.in/blog/localize-your-android-app-with-multiple-language-options/</guid>
      <description>Android runs on many devices in many regions. To reach the most users, your app should handle text, audio files, numbers, currency, and graphics in ways appropriate to the locales where your app is used.
It is not enough to use only one languageoption while developing applications. When we publish our applications, there may be users who want to use it in different languages or who do not know the languagewe have developed.</description>
    </item>
    
    <item>
      <title>Implementing Biometric Authentication in Java Android</title>
      <link>https://thestreamliners.in/blog/implementing-biometric-authentication-in-java-android/</link>
      <pubDate>Sat, 15 May 2021 00:00:00 +0530</pubDate>
      
      <guid>https://thestreamliners.in/blog/implementing-biometric-authentication-in-java-android/</guid>
      <description>Thinking of adding your own app lock to your android app? Adding a biometric app lock ðŸ”’ to protect your user from unauthorized usage, protect their data and information can be really helpful.
Biometric authentication allows you to quickly unlock your device with your fingerprint or face, confirming itâ€™s really you whoâ€™s using the app.
Androidâ€™s biometric APIs allow for secure authentication on the Android platform. They manage a system-provided biometric authentication prompt, and provide a seamless experience by supporting various authentication types, including biometric ones such as fingerprint and face, as well as non-biometric types like PIN, password, and pattern.</description>
    </item>
    
    <item>
      <title>Implementing the Perfect Splash for Android</title>
      <link>https://thestreamliners.in/blog/implementing-the-perfect-splash-for-android/</link>
      <pubDate>Sat, 15 May 2021 00:00:00 +0530</pubDate>
      
      <guid>https://thestreamliners.in/blog/implementing-the-perfect-splash-for-android/</guid>
      <description>A Splash Screen is a screen which appears when you open an app on your mobile device. Sometimes itâ€™s referred to as a launch screen or startup screen and shows up when your app is loading after you&amp;rsquo;ve just opened it.
When the loading is finished, youâ€™ll be taken to a more functional screen where you can complete actions.
Splash screens appear on your screen for a fleeting moment â€“ look away and you might miss them.</description>
    </item>
    
  </channel>
</rss>
